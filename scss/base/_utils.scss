$text-size: (
    tiny: 12px,
    small: 14px,
    normal: 16px,
    medium: 18px,
);

$text-weight: (
    bold: 600,
    medium: 500,
    normal: 400,
    light: 300,
);

$line-height: (
    equal: 1,
    small: 1.2,
    normal: 1.5,
);

/*.text {
    color: $color-text;
    font-size: $font-size-base;
    line-height: $line-height-base;

    &:last-child {
        margin-bottom: 0;
    }

    &--light {
        color: $color-text--light;
    }
}*/

.u-text {
    &-align {
        &--left {
            align-items: flex-start;
            text-align: left;
        } //.u-text-align--left

        &--right {
            align-items: flex-end;
            text-align: right;
        } //.u-text-align--right

        &--center {
            align-items: center;
            text-align: center;
        } //.u-text-align--center
    } //.u-text-align

    &-size {
        @each $size, $number in $text-size {
            &--#{$size} {
                font-size: $number !important;
            }
        }
    } //.u-text-size

    &-weight {
        @each $name, $number in $text-weight {
            &--#{$name} {
                font-weight: $number !important;
            }
        }
    } //.u-text-weight

    &-height {
        @each $name, $number in $line-height {
            &--#{$name} {
                line-height: $number !important;
            }
        }
    } //.u-text-height

    &-initial {
        text-transform: initial;

        .v-btn__content {
            text-transform: initial;
        }

        &.v-size--large {
            @include max(sm) {
                font-size: 17px !important;
            }
        }
    } //.u-text-initial

    &-uppercase {
        text-transform: uppercase;
    } //.u-text-uppercase

    &-capitalize {
        text-transform: capitalize;
    } //.u-text-capitalize

    &-color {
        color: $color-text !important;

        &--light {
            color: $color-text--light !important;
        } //.u-text-color--light
    } //.u-text-color
} //.u-text

.u-width {
    &--full {
        width: 100%;
    } //.u-width--full
} //.u-width

.u-scroll {
    &--horizontal {
        @include max(xs) {
            overflow: hidden !important;

            & > ul,
            & > div {
                scroll-behavior: smooth;
                flex-wrap: nowrap;
                margin-bottom: -30px !important;
                padding-bottom: 30px !important;
                overflow-x: auto;
            }
        }
    }
} //.u-scroll

.u-border {
    border: 1px solid $color-border--lighten !important;

    @each $direction in top, bottom, left, right {
        &--#{$direction} {
            @include border(#{$direction}, $color-border--lighten);
        }
    }

    @each $screen, $number in $breakpoints {
        @include min(#{$screen}) {
            &--#{$screen} {
                border-radius: $border-radius-large;
            }
            &-#{$screen} {
                &--rounded {
                    border-radius: $border-radius-large;
                } //.u-border--rounded

                &--circle {
                    border-radius: 50% !important;
                } //.u-border--rounded
            }
        }
        @include max(#{$screen}) {
            &--#{$screen} {
                border-radius: 0 !important;
            }
            &-#{$screen} {
                &--rounded {
                    border-radius: $border-radius-large;
                } //.u-border--rounded

                &--circle {
                    border-radius: 50% !important;
                } //.u-border--rounded
            }
        }
    }

    &--rounded {
        border-radius: $border-radius-large;
    } //.u-border--rounded

    &--circle {
        border-radius: 50% !important;
    } //.u-border--circle
} //.u-border

.u-box-shadow {
    @each $screen, $number in $breakpoints {
        @include min(#{$screen}) {
            &--#{$screen} {
                box-shadow: $box-shadow-base !important;
            }
        }
        @include max(#{$screen}) {
            &--#{$screen} {
                box-shadow: none !important;
            }
        }
    }
    &,
    .theme--light &.v-btn.white {
        box-shadow: $box-shadow-base !important;
    }

    &-secondary {
        @each $screen, $number in $breakpoints {
            @include min(#{$screen}) {
                &--#{$screen} {
                    box-shadow: $box-shadow-base !important;
                }
            }
        }
    }
}

.u-no-select {
    @include user-select-none;
}

.u-square-box {
    overflow: hidden;

    &::before {
        content: '';
        padding-top: 100%;
        float: left;
    }
} //.square-box

.u-hover {
    cursor: pointer;

    &:hover {
        background-color: $color-bg--hover;
    }
}

.u-hover-underline {
    text-decoration: none;
    &:hover {
        text-decoration: underline;
    }
}

.u-hidden {
    display: none;

    &--important {
        display: none !important;
    }
}

.u-if-ios--show {
    display: none !important;
}

.is-ios {
    .u-if-ios--show {
        display: flex !important;
    }
    .u-if-ios--hide {
        display: none !important;
    }
}

.u-hide-before {
    &::before,
    &::after,
    &:hover::before,
    &:hover::after,
    &:focus::before,
    &:focus::after,
    &:active::before,
    &:active::after {
        display: none;
    }
}

.u-transition {
    @include tr;
}

.u-no-padding {
    padding: 0 !important;

    @each $breakpoint, $value in $breakpoints {
        @include max(#{$breakpoint}) {
            &--#{$breakpoint} {
                padding: 0 !important;
            }
        }
    }

    @each $breakpoint, $value in $breakpoints {
        &-y {
            padding-top: 0 !important;
            padding-bottom: 0 !important;

            @include max(#{$breakpoint}) {
                &--#{$breakpoint} {
                    padding-top: 0 !important;
                    padding-bottom: 0 !important;
                }
            }
        }
    }

    @each $breakpoint, $value in $breakpoints {
        &-x {
            padding-right: 0 !important;
            padding-left: 0 !important;

            @include max(#{$breakpoint}) {
                &--#{$breakpoint} {
                    padding-right: 0 !important;
                    padding-left: 0 !important;
                }
            }
        }
    }

    &-top {
        padding-top: 0 !important;

        @each $breakpoint, $value in $breakpoints {
            @include max(#{$breakpoint}) {
                &--#{$breakpoint} {
                    padding-top: 0 !important;
                }
            }
        }
    } //._no-padding-top

    &-bottom {
        padding-bottom: 0 !important;

        @each $breakpoint, $value in $breakpoints {
            @include max(#{$breakpoint}) {
                &--#{$breakpoint} {
                    padding-bottom: 0 !important;
                }
            }
        }
    } //._no-padding-top
} //._no-padding

.u-no-shadow {
    box-shadow: none !important;

    @each $breakpoint, $value in $breakpoints {
        @include max(#{$breakpoint}) {
            &--#{$breakpoint} {
                box-shadow: none !important;
            }
        }
    }
} //.u-no-shadow

.u-no-border {
    border: 0 !important;

    @each $breakpoint, $value in $breakpoints {
        @include max(#{$breakpoint}) {
            &--#{$breakpoint} {
                border: 0 !important;
            }
        }
    }
} //.u-no-border

.u-no-border-radius {
    border-radius: 0 !important;

    @each $breakpoint, $value in $breakpoints {
        @include max(#{$breakpoint}) {
            &--#{$breakpoint} {
                border-radius: 0 !important;
            }
        }
    }
} //.u-no-border-radius

.u-not-visible {
    position: absolute;
    z-index: -1;
    opacity: 0;
}

.u-visible-hidden {
    clip-path: inset(50%);
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0 0 0 0);
    border: 0;
    white-space: nowrap;
}
